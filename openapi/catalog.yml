openapi: '3.0.3'
info:
  title: Sneakernet Catalog
  description: REST API
  version: 0.0.0

servers:
  - url: http://192.168.4.1/api   # android needs absolute IP
  - url: https://192.168.4.1/api  # android needs absolute IP

security:
  - {} # allow unsecured access
  # TODO support admin access


paths:
  /catalog/{path}/:
    parameters:
      - name: path
        in: path
        required: true
        schema: { type: string }
    get:
      description: get subfolder content
      responses:
        "200" :
          description: OK
          content:
            application/json:
              schema: { '$ref': '#/components/schemas/Folder' }
        "404": { description: Folder Not Found }
        "429": { description: Client should try again }

  /catalog/{path}/{file}:
    parameters:
      - name: path
        in: path
        required: true 
        schema: { type: string }
      - name: file
        in: path
        required: true
        schema: { type: string }
    get:
      description: download file
      responses:
        "200" :
          description: sending file
          content: { application/octet-stream: {} }
        "404": { description: File Not Found }
        "429": { description: Client should try again }
    put:
      description: add a file
      responses:
        "200": { description: "file accepted" }
        "411": { description: "Content-Length required" }
        "400": { description: "parent folder doesn't exist" }
        "401": { $ref: '#/components/responses/adminCurated' }
        "429": { description: "client should try again" }
    delete:
      description: remove a file
      responses:
        "200": { description: "file removed" }
        "404": { description: "File Not Found" }
        "401": { $ref: '#/components/responses/adminCurated' }
        "429": { description: "client should try again" }

  /catalog/{path}/{file}?title={title}:
    parameters:
      - name: path
        in: path
        required: true 
        schema: { type: string }
      - name: file
        in: path
        required: true
        schema: { type: string }
    put:
      description: set the title for the file
      parameters:
        - name: title
          in: query
          required: true
          schema: { type: string }
      responses:
        "200": { description: "title changed" }
        "404": { description: "File Not Found" }
        "401": { $ref: '#/components/responses/adminCurated' }
        "429": { description: "client should try again" }

  /catalog/{path}/{file}?icon:
    parameters:
      - name: path
        in: path
        required: true 
        schema: { type: string }
      - name: file
        in: path
        required: true
        schema: { type: string }
    put:
      description: upload a new icon
      requestBody: 
        content:
          application/octet-stream: {}
      responses:
        "200": { description: "icon changed" }
        "404": { description: "File Not Found" }
        "401": { $ref: '#/components/responses/adminCurated' }
        "429": { description: "client should try again" }
        


components:

  responses:
    adminCurated:
      description: Only admin can modify contents

  schemas:
    Folder:
      type: object
      properties:
        locked:
          type: boolean
          description: folder contents are locked (only admin can modify)
        subfolders:
          type: array
          items:
            type: string
        files:
          type: array
          items: { '$ref': '#/components/schemas/File'}
    File:
      type: object
      required: [name, size, timestamp]
      properties:
        name: { type: string }
        size: { type: integer, description: "size in bytes" }
        timestamp: { type: string, description: "ISO 8601 Z (aka UTC time)" }
        title: { type: string }
        hasIcon: { type: boolean }

